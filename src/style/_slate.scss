.form_container {
  //header 1
  .form_h1 {
    .form_label {
      color: $primary;
      font-weight: 900;
      font-size: 2em;
    }
  }
  //header 2
  .form_h2 {
    .form_label {
      color: $tertiary;
      font-size: 1.5em;
      font-weight: 900;
    }
  }
  // header row
  .form_header {
    .form_label {
      background: $tertiary;
      color: #fff;
      padding: 1em 1em;
      margin: 0 -1em;
    }
  }
  //instruction blocks (included styles should override these.)
  .form_p {
    @include media-breakpoint(md) {
      max-width: 80%;
    }
    .form_label {
      color: $text;
      font-size: 0.85em;
    }
  }
  //text boxes
  .form_text {
    .form_label {
      @include label;
    }
    .form_responses {
      margin-top: 0.5em;
      input {
        @include generic;
      }
    }
  }
  //select boxes
  .form_select {
    .form_label {
      @include label;
    }
    .form_responses {
      margin-top: 0.5em;
      select {
        @include select;
      }
    }
  }
  //checkboxes
  .form_checkbox {
    .form_label {
      @include label;
    }
    .form_responses {
      padding-left: 1em;
      margin-top: 0.5em;
      color: $text;
      label {
        position: relative;
        margin-bottom: 0;
        vertical-align: top;
      }
      input {
        width: 1.25em;
        height: 1.25em;
        margin: 0.25em 0;
        vertical-align: top;
        background-color: #fff;
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        border: 1px solid rgba(0, 0, 0, 0.25);
        border-radius: 0.25em;
        appearance: none;
        color-adjust: exact;
        &:disabled {
          pointer-events: none;
          filter: none;
          opacity: 0.5;
        }
        &:checked {
          background-color: $secondary !important;
          border-color: $secondary !important;
          background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
        }
      }
    }
  }
  //radio (option) buttons
  .form_radio {
    .form_label {
      @include label;
    }
    .form_responses {
      padding-left: 1em;
      margin-top: 0.5em;
      color: $text;
      label {
        position: relative;
        margin-bottom: 0;
        vertical-align: top;
      }
      input {
        width: 1.25em;
        height: 1.25em;
        margin: 0.25em 0;
        vertical-align: top;
        background-color: #fff;
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        border: 1px solid rgba(0, 0, 0, 0.25);
        border-radius: 50%;
        appearance: none;
        color-adjust: exact;
        &:disabled {
          pointer-events: none;
          filter: none;
          opacity: 0.5;
        }
        &:checked {
          background-color: $secondary !important;
          border-color: $secondary !important;
          background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
        }
      }
    }
  }
  //address block
  .form_address {
    .form_label {
      @include label;
    }
    fieldset > div {
      margin-top: 1em;
    }
    .form_responses {
      margin-top: 0.5em;
      // country & region/state
      select {
        @include select;
      }
      // street
      textarea {
        @include generic;
        resize: none;
        display: block;
      }
      // city & postal
      input {
        @include generic;
      }
    }
  }
  // likert rating scales
  .form_likert {
    display: flex;
    flex-direction: column;
    fieldset {
      display: contents;
      .form_label {
        @include label;
        display: block;
        padding: 0;
        order: 1;
      }
      .form_responses_labels {
        margin: 0;
        order: 3;
        .form_response_label {
          @include label;
          text-align: center;
          label {
            cursor: pointer;
          }
        }
      }
      .form_responses {
        order: 2;
        .form_response {
          position: relative;
          text-align: center;
          div.selected {
            &:after {
              content: '';
              background-color: #841617;
              border-radius: 50%;
              height: 24px;
              width: 24px;
              display: block;
              position: absolute;
              left: calc(50% - 12.5px);
              top: 50%;
            }
          }
          input {
            appearance: none;
            opacity: 0;
          }
          &:before {
            content: '';
            background-color: $tertiary;
            width: 2px;
            height: 1em;
            position: relative;
            z-index: -1;
            display: block;
            top: 0.7em;
            left: calc(50% - 1.15px);
          }
          &:after {
            content: '';
            background-color: $tertiary;
            width: 100%;
            height: 2px;
            display: block;
            position: relative;
            top: -1.8em;
            right: -50%;
            z-index: -1;
          }
          &:last-of-type:after {
            width: 0;
          }
        }
      }
    }
  }
  // date input and birthdate (dates more than 1 year in the past/future)
  .form_date,
  .form_birthdate {
    .form_label {
      @include label;
    }
    .form_responses {
      margin-top: 0.5em;
      select {
        @include select;
      }
    }
  }

  .form_dateym,
  .form_datemd {
    .form_label {
      @include label;
    }
    .form_responses {
      margin-top: 0.5em;
      select {
        @include select;
      }
    }
  }
  //calendar datepicker
  .form_calendar {
    .form_label {
      @include label;
    }
    .form_responses {
      @import './datepicker.scss';
    }
  }
  // material uploader
  .form_plugin\:material {
    display: flex;
    flex-wrap: wrap;

    .form_label {
      align-self: center;
      padding: 2em 3em;
      border: 1px $text dashed;
      flex-basis: 100%;
      @include media-breakpoint(md) {
        border-width: 2px;
        flex-basis: auto;
      }
      border-radius: 8px;
      color: $text;
      width: fit-content;
      cursor: pointer;
      margin-top: 1em;
      text-align: center;
    }
    input {
      opacity: 0;
      height: 0;
    }
    .form_responses {
      width: 100%;
      @include media-breakpoint(md) {
        width: auto;
      }
    }
    .form_response_material_upload {
      @include media-breakpoint(md) {
        margin-left: 1em;
      }
      p {
        height: 0;
        margin: 1em 0 0 0;
      }
      .file-listing {
        background-color: #ededed;
        padding: 0.5em;
        color: $text;
        font-size: 0.8em;
        &:not(:first-of-type) {
          margin-top: 0.5em;
        }
      }
    }
  }
  //required form questions
  .form_question.required {
    background-color: initial;
    .form_label {
      color: $secondary;
      &:before {
        content: '';
        background-image: url('../images/svg/invalid.svg');

        height: 1em;
        background-repeat: no-repeat;
        background-size: contain;
        position: relative;
        display: inline-block;
        width: 1.5em;
        vertical-align: -2px;
      }
    }
  }
}
// submit button
.action {
  margin: 2em 0;
  .default {
    background-color: $secondary;
    padding: 0.7em 2em;
    color: #fff;
    border: none;
    border-radius: 5px;
  }
}

//error/notification dialogs
.dialog_host {
  top: 0 !important;
  left: initial !important;
  display: flex;
  position: fixed;
  height: 100%;
  width: 100%;
  justify-content: center;
  align-items: center;
  .dialog {
    width: calc(100% - 20px) !important;
    @include media-breakpoint(sm) {
      width: 500px !important;
    }
    border-radius: 8px;
    max-width: 100% !important;
    .header {
      background-color: $tertiary;
      color: #fff;
      font-weight: 400;
    }
    .content {
      color: $text;
      .error {
        background-color: adjust-color($tertiary, $alpha: -0.8);
        border-color: adjust-color($tertiary, $alpha: -0.6);
        border-radius: 2px;
        border-width: 40px;
        position: relative;
        color: $text;
        font-weight: 900;
        &:before {
          content: '';
          background-image: url(../images/svg/invalid.svg);
          display: block;
          height: 30px;
          width: 30px;
          background-repeat: no-repeat;
          background-size: contain;
          position: absolute;

          left: -35px;
          top: calc(50% - 15px);
        }
      }
    }

    div[role='alert'] {
      color: $secondary !important;
    }
    .action {
      padding: 1em;
      button {
        background-color: adjust-color($tertiary, $alpha: -0.8);
        padding: 0.7em 2em;
        color: $text;
        border: none;
        border-radius: 5px;
        &:not(:first-of-type) {
          margin-left: 0.7em;
        }
        &.default {
          background-color: $secondary;
          color: #fff;
        }
      }
    }
  }
}
